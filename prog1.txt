# Program 1 by Group12 for Project3
# 28, Oct, 2018


init R0, 0
ld R2, R0      # R2 = P

init R0, 1
ld R1, R0      # R1 = Q

init R3, 6     # R3 = MUX[3] = 6, the result of calculation

init R0, 1     # the exponential counter


L1: # jpu1 MUX[01] = 6 (instruction mem address)

R3x6           # R3 = R3 * 6

inc R0

add R3, R1     # R3 = R3 + Q


L2:# jpu1 MUX[00] = 9 (instruction mem address)

subR3 R1       # R3 = R3 - Q

jpu1 R1, R3, 9 # jump to L2 if R1 < R3 (Q < Result) there should be Q<= Result

jpu1 R0, R2, 6
# jump to L1 if R0 < R2 (counter < P)


Finish:

jpu2 R3, R1, 14
# R3 should <= R1(Q) here, if R3 < R1 (Result < Q) jump to END

subR3 R1
# PC goes here only if R3 = R1 (Result = Q), when should subtract Q one more time

END: # jpu2 MUX[00] = 14 (instruction mem address)
init R1, 1
inc R1
# R1 = 2 
st R3, R1 
